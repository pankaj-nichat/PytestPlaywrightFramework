{"uid":"b2129c120e9d4231","name":"test_on_smoke","fullName":"tests.OnCall.test_oncall.TestOnCallTestKeywords#test_on_smoke","historyId":"29259ea18e6e0e5ad208aa2befd1b2f3","time":{"start":1748332745656,"stop":1748332745656,"duration":0},"status":"broken","statusMessage":"TypeError: BrowserType.launch() got an unexpected keyword argument 'logger'","statusTrace":"self = <test_oncall.TestOnCallTestKeywords object at 0x0000015270BB2D50>\n\n    @pytest.fixture()\n    def browser_setup(self):\n>       self.browser_on_call=self.OnCallFunctions.create_browser()\n\ntests\\OnCall\\test_oncall.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <controller.OnCallFunctions.OnCallFunctions object at 0x00000152708CBCB0>\n\n        def create_browser(self):\n            self.start()\n>           browser = self.pw.chromium.launch(headless=False,logger={\n            \"isEnabled\": lambda name, severity: name == \"api\",\n            \"log\": lambda name, severity, message, args: print(f\"{name}: {message}\")\n        }\n    )\nE   TypeError: BrowserType.launch() got an unexpected keyword argument 'logger'\n\ncontroller\\base.py:19: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_logging","time":{"start":1748332745657,"stop":1748332745657,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"browser_setup","time":{"start":1748332745657,"stop":1748332746270,"duration":613},"status":"broken","statusMessage":"TypeError: BrowserType.launch() got an unexpected keyword argument 'logger'\n","statusTrace":"  File \"C:\\Projects\\PlayWrightWithPython\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"C:\\Projects\\PlayWrightWithPython\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"C:\\Projects\\PlayWrightWithPython\\.venv\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"C:\\Projects\\PlayWrightWithPython\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"C:\\Projects\\PlayWrightWithPython\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"C:\\Projects\\PlayWrightWithPython\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"C:\\Projects\\PlayWrightWithPython\\tests\\OnCall\\test_oncall.py\", line 19, in browser_setup\n    self.browser_on_call=self.OnCallFunctions.create_browser()\n                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Projects\\PlayWrightWithPython\\controller\\base.py\", line 19, in create_browser\n            browser = self.pw.chromium.launch(headless=False,logger={\n                      ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^\n            \"isEnabled\": lambda name, severity: name == \"api\",\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            \"log\": lambda name, severity, message, args: print(f\"{name}: {message}\")\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        }\n        ^\n    )\n    ^\n","steps":[{"name":"LOG (DEBUG): Using proactor: IocpProactor","time":{"start":1748332745657,"stop":1748332745657,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"TypeError: BrowserType.launch() got an unexpected keyword argument 'logger'","statusTrace":"self = <test_oncall.TestOnCallTestKeywords object at 0x0000015270BB2D50>\n\n    @pytest.fixture()\n    def browser_setup(self):\n>       self.browser_on_call=self.OnCallFunctions.create_browser()\n\ntests\\OnCall\\test_oncall.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <controller.OnCallFunctions.OnCallFunctions object at 0x00000152708CBCB0>\n\n        def create_browser(self):\n            self.start()\n>           browser = self.pw.chromium.launch(headless=False,logger={\n            \"isEnabled\": lambda name, severity: name == \"api\",\n            \"log\": lambda name, severity, message, args: print(f\"{name}: {message}\")\n        }\n    )\nE   TypeError: BrowserType.launch() got an unexpected keyword argument 'logger'\n\ncontroller\\base.py:19: TypeError","steps":[],"attachments":[{"uid":"f3c7c3d31a4bd11a","name":"log","source":"f3c7c3d31a4bd11a.txt","type":"text/plain","size":77}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"story","value":"Smoke"},{"name":"tag","value":"smoke"},{"name":"tag","value":"critical"},{"name":"feature","value":"OnCall"},{"name":"parentSuite","value":"tests.OnCall"},{"name":"suite","value":"test_oncall"},{"name":"subSuite","value":"TestOnCallTestKeywords"},{"name":"host","value":"DESKTOP-G02SEED"},{"name":"thread","value":"24136-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.OnCall.test_oncall"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["critical","smoke"]},"source":"b2129c120e9d4231.json","parameterValues":[]}